module mobl::server::fs

import mobl::server

external type File {
  function read(buf : Buffer, offset : Num = 0, length : Num) : Num
  function write(buf : Buffer, offset : Num = 0, length : Num) : Num

  static function readFile(path : String) : String
  static function writeFile(path : String, data : String) : Bool
  static function open(path : String, flags : String, mode : Num = 0666) : File
}

<javascript>
var fs = require('fs');

mobl__server__fs.File = function(fd) {
  this.fd = fd;
};

mobl__server__fs.File.open = function(path, flags, mode, callback) {
  fs.open(path, flags, mode, function(err, fd) {

  });
};

mobl__server__fs.File.prototype.read = function(buf, offset, length, callback) {
  fs.read(this.fd, buf, offset, length, null, function(err, numRead) {
    if(err) {
      callback(-1);
    } else {
      callback(numRead);
    }
  });
};

mobl__server__fs.File.prototype.write = function(buf, offset, length, callback) {
  fs.write(this.fd, buf, offset, length, null, function(err, numWritten) {
    if(err) {
      callback(-1);
    } else {
      callback(numWritten);
    }
  });
};

mobl__server__fs.File.readFile = function(path, callback) {
  fs.readFile(path, "utf8", function(err, data) {
    if(err) {
      callback(null);
    } else {
      callback(data);
    }
  });
};

mobl__server__fs.File.writeFile = function(path, data, callback) {
  fs.writeFile(path, data, "utf8", function(err) {
    if(err) {
      callback(false);
    } else {
      callback(true);
    }
  });
};
</javascript>