module mobl::canvas

external type Graphics {
  fillStyle : String
  strokeStyle : String
  font : String

  sync function restore() : void
  sync function save() : void

  sync function clearRect(x : Num, y : Num, w : Num, h : Num) : void
  sync function fillRect(x : Num, y : Num, w : Num, h : Num) : void
  sync function strokeRect(x : Num, y : Num, w : Num, h : Num) : void

  sync function fillText(s : String, x : Num, y : Num) : void

  sync function arc(x : Num, y : Num, radius : Num, startAngle : Num, endAngle : Num, anticlockwise : Bool = false) : void

  sync function beginPath() : void
  sync function closePath() : void
  sync function fill() : void

  sync function drawImage(img : Image, x : Num, y : Num) : void
}

external type Image {

}

external sync function loadImage(url : String) : Image

external function setupCanvas(id : String) : Graphics

/*
control canvas(g : Graphics, width : Num = 300, height : Num = 300, ontouchstart : Callback = null, ontouchmove : Callback = null, ontouchend : Callback = null, onkeyup : Callback = null) {
  <canvas width=width height=height ontouchdown=ontouchstart ontouchdrag=ontouchmove ontouchup=ontouchend onkeyup=onkeyup>
  </canvas>
}
*/

external control canvas(g : Graphics, width : Num = 300, height : Num = 300, ontouchstart : Callback = null, ontouchmove : Callback = null, ontouchend : Callback = null, onkeyup : Callback = null)

// Written in native-Javascript to quickly pull out the 2d graphics context and write it to argument `g`

<javascript>
mobl.canvas.canvas = function(g, width, height, ontouchstart, ontouchmove, ontouchend, onkeyup, elements, callback) {
  var root408 = $("<span>");

  var node232 = $("<canvas >");
  g.set(node232[0].getContext('2d'));

  var ref121 = width;
  if(ref121.get() !== null) {
    node232.attr('width', ref121.get());
    ref121.addEventListener('change', function(_, ref, val) {
      if(ref === ref121) {
        node232.attr('width', val);
      } else {
        console.log("Garbage!");
      }
    });

  }
  ref121.rebind();

  var ref122 = height;
  if(ref122.get() !== null) {
    node232.attr('height', ref122.get());
    ref122.addEventListener('change', function(_, ref, val) {
      if(ref === ref122) {
        node232.attr('height', val);
      } else {
        console.log("Garbage!");
      }
    });

  }
  ref122.rebind();

  var val92 = ontouchstart.get();
  if(val92 !== null) {
    node232.bind('touchdown', val92);
  }

  var val93 = ontouchmove.get();
  if(val93 !== null) {
    node232.bind('touchdrag', val93);
  }

  var val94 = ontouchend.get();
  if(val94 !== null) {
    node232.bind('touchup', val94);
  }

  var val95 = onkeyup.get();
  if(val95 !== null) {
    node232.bind('keyup', val95);
  }

  root408.append(node232);
  callback(root408); return;


};

mobl.canvas.loadImage = function(url) {
  var img = new Image();
  img.src = url;
  return img;
};
</javascript>

